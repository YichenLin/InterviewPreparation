/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int minDepth(TreeNode root) {
        if(root==null) return 0;
        LinkedList<TreeNode> node = new LinkedList<TreeNode>();
        LinkedList<Integer> depth = new LinkedList<Integer>();
        node.add(root);
        depth.add(1);
        while(!node.isEmpty()){
            TreeNode current = node.remove();
            int count = depth.remove();
            if(current.left!=null){
                node.add(current.left);
                depth.add(count+1);
            }
            if(current.right!=null){
                node.add(current.right);
                depth.add(count+1);
            }
            if(current.left==null && current.right==null){
                return count;
            }
        }
        return 0;
    }
}
